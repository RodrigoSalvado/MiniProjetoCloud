name: Build & Deploy Azure Apps (Function + Web App)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.12'
  FUNCTIONAPP_NAME: propjetocloudfunctionapp
  FUNCTIONAPP_PATH: './redditIngestFunc'
  REGISTRY: docker.io
  IMAGE_NAME: rodrig0salv/minha-app
  TAG: latest
  PLATFORM: linux/amd64
  WEBAPP_NAME: reddit-app

jobs:
  infra:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Login no Azure com OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Inicializar Terraform
        run: terraform init
        working-directory: infra

      - name: Validar Terraform
        run: terraform validate
        working-directory: infra

      - name: Aplicar toda a infraestrutura
        run: terraform apply -auto-approve
        working-directory: infra

  build-and-deploy-function:
    runs-on: ubuntu-latest
    needs: infra
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Criar e ativar ambiente virtual
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Instalar dependências
        run: |
          source venv/bin/activate
          pip install -r ${{ env.FUNCTIONAPP_PATH }}/requirements.txt

      - name: Zipar pasta da Function
        run: |
          cd ${{ env.FUNCTIONAPP_PATH }}
          zip -r ../release.zip .

      - name: Instalar Azure Functions Core Tools
        run: npm install -g azure-functions-core-tools@4 --unsafe-perm true

      - name: Fazer deploy da Function App
        run: |
          cd ${{ env.FUNCTIONAPP_PATH }}
          func azure functionapp publish ${{ env.FUNCTIONAPP_NAME }} --python --force

  build-and-deploy-webapp:
    runs-on: ubuntu-latest
    needs: infra
    environment:
      name: production

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login no Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build e Push da imagem Docker
        uses: docker/build-push-action@v3
        with:
          context: ./web-app
          file: ./web-app/Dockerfile
          platforms: ${{ env.PLATFORM }}
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}

      - name: Deploy para Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.WEBAPP_NAME }}
          slot-name: production
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
