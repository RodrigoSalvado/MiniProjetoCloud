name: Build and Deploy to Azure (Function App + Web App)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  # Comum
  PYTHON_VERSION: '3.12'
  # Function App
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './redditIngestFunc'
  FUNCTIONAPP_NAME: 'propjetocloudfunctionapp'
  # Web App
  REGISTRY: docker.io
  IMAGE_NAME: rodrig0salv/minha-app
  TAG: latest
  PLATFORM: linux/amd64
  WEBAPP_NAME: 'reddit-app'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Function App - Python
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Create and activate virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install Function dependencies
        run: |
          source venv/bin/activate
          pip install -r ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/requirements.txt

      - name: Zip Function App for deployment
        run: |
          cd ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          zip -r ../release.zip .

      - name: Upload Function App artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip

      # Web App - Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.AZUREAPPSERVICE_CONTAINERUSERNAME_05F08B3D5D3A42788F364682EB18570A }}
          password: ${{ secrets.AZUREAPPSERVICE_CONTAINERPASSWORD_3C476478AD3749ADBF692BA277661C71 }}

      - name: Build & push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./web-app
          file: ./web-app/Dockerfile
          platforms: ${{ env.PLATFORM }}
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download Function App artifact
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip Function App artifact
        run: unzip release.zip -d ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}

      - name: Login to Azure via AZURE_CREDENTIALS
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Install Azure Functions Core Tools
        run: npm install -g azure-functions-core-tools@4 --unsafe-perm true

      - name: Publish Function App
        run: |
          cd ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          func azure functionapp publish ${{ env.FUNCTIONAPP_NAME }} --python --force

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.WEBAPP_NAME }}
          slot-name: production
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
