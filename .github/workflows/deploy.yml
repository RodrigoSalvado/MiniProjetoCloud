name: Build and Deploy to Azure (Terraform + Function App + Web App)

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.11'
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './redditIngestFunc'
  FUNCTIONAPP_NAME: 'propjetocloudfunctionapp'
  REGISTRY: docker.io
  IMAGE_NAME: rodrig0salv/minha-app
  TAG: latest
  PLATFORM: linux/amd64
  WEBAPP_NAME: 'reddit-app'
  TERRAFORM_DIR: './infra'

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Login no Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Inicializar Terraform
        run: terraform init
        working-directory: ${{ env.TERRAFORM_DIR }}

      - name: Importar recursos existentes (se ainda não existirem no state)
        run: |
          terraform import azurerm_resource_group.main \
            /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/terraform-cloud

          terraform import azurerm_cognitive_account.translator \
            /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/terraform-cloud/providers/Microsoft.CognitiveServices/accounts/translator-service

          terraform import azurerm_virtual_network.main \
            /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/terraform-cloud/providers/Microsoft.Network/virtualNetworks/cloudvnet

          terraform import azurerm_cosmosdb_account.main \
            /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/terraform-cloud/providers/Microsoft.DocumentDB/databaseAccounts/terraformcloudcosmosdb

          terraform import azurerm_cosmosdb_sql_database.main \
            /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/terraform-cloud/providers/Microsoft.DocumentDB/databaseAccounts/terraformcloudcosmosdb/sqlDatabases/RedditApp

          terraform import azurerm_cosmosdb_sql_container.main \
            /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/terraform-cloud/providers/Microsoft.DocumentDB/databaseAccounts/terraformcloudcosmosdb/sqlDatabases/RedditApp/containers/posts

          terraform import azurerm_service_plan.main \
            /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/terraform-cloud/providers/Microsoft.Web/serverFarms/asp-project-cloud

          terraform import azurerm_storage_account.main \
            /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/terraform-cloud/providers/Microsoft.Storage/storageAccounts/storageprojetocloud

          terraform import azurerm_linux_web_app.web \
            /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/terraform-cloud/providers/Microsoft.Web/sites/reddit-app

          terraform import azurerm_linux_function_app.main \
            /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/terraform-cloud/providers/Microsoft.Web/sites/propjetocloudfunctionapp

          terraform import azurerm_subnet.app \
            /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/terraform-cloud/providers/Microsoft.Network/virtualNetworks/cloudvnet/subnets/subnetappname

          terraform import azurerm_subnet.priv \
            /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/terraform-cloud/providers/Microsoft.Network/virtualNetworks/cloudvnet/subnets/subnetprivname

          terraform import azurerm_private_endpoint.cosmos \
            /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/terraform-cloud/providers/Microsoft.Network/privateEndpoints/pe-cosmos
  
        working-directory: ${{ env.TERRAFORM_DIR }}

      - name: Validar Terraform
        run: terraform validate
        working-directory: ${{ env.TERRAFORM_DIR }}

      - name: Aplicar Terraform
        run: terraform apply -auto-approve
        working-directory: ${{ env.TERRAFORM_DIR }}

  build:
    runs-on: ubuntu-latest
    needs: terraform
    permissions:
      contents: read

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Criar e ativar ambiente virtual
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Instalar dependências da Function
        run: |
          source venv/bin/activate
          pip install -r ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/requirements.txt

      - name: Zip Function App
        run: |
          cd ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          zip -r ../release.zip .

      - name: Guardar Function App como artefacto
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login no Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.AZUREAPPSERVICE_CONTAINERUSERNAME_05F08B3D5D3A42788F364682EB18570A }}
          password: ${{ secrets.AZUREAPPSERVICE_CONTAINERPASSWORD_3C476478AD3749ADBF692BA277661C71 }}

      - name: Build & Push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./web-app
          file: ./web-app/Dockerfile
          platforms: ${{ env.PLATFORM }}
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Recuperar artefacto da Function App
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Descompactar Function App
        run: unzip release.zip -d ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}

      - name: Login no Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Adicionar CORS à Function App (https://portal.azure.com)
        run: |
          az functionapp cors add \
            --name ${{ env.FUNCTIONAPP_NAME }} \
            --resource-group terraform-cloud \
            --allowed-origins https://portal.azure.com


      - name: Instalar Azure Functions Core Tools
        run: npm install -g azure-functions-core-tools@4 --unsafe-perm true

      - name: Fazer deploy da Function App
        run: |
          cd ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          func azure functionapp publish ${{ env.FUNCTIONAPP_NAME }} --build local --python --force


      - name: Deploy da Web App (Docker)
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.WEBAPP_NAME }}
          slot-name: production
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
